//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace VitualGarage.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class VirtualGarageEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new VirtualGarageEntities object using the connection string found in the 'VirtualGarageEntities' section of the application configuration file.
        /// </summary>
        public VirtualGarageEntities() : base("name=VirtualGarageEntities", "VirtualGarageEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new VirtualGarageEntities object.
        /// </summary>
        public VirtualGarageEntities(string connectionString) : base(connectionString, "VirtualGarageEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new VirtualGarageEntities object.
        /// </summary>
        public VirtualGarageEntities(EntityConnection connection) : base(connection, "VirtualGarageEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarcaseType> CarcaseTypes
        {
            get
            {
                if ((_CarcaseTypes == null))
                {
                    _CarcaseTypes = base.CreateObjectSet<CarcaseType>("CarcaseTypes");
                }
                return _CarcaseTypes;
            }
        }
        private ObjectSet<CarcaseType> _CarcaseTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarInGarage> CarInGarages
        {
            get
            {
                if ((_CarInGarages == null))
                {
                    _CarInGarages = base.CreateObjectSet<CarInGarage>("CarInGarages");
                }
                return _CarInGarages;
            }
        }
        private ObjectSet<CarInGarage> _CarInGarages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarMark> CarMarks
        {
            get
            {
                if ((_CarMarks == null))
                {
                    _CarMarks = base.CreateObjectSet<CarMark>("CarMarks");
                }
                return _CarMarks;
            }
        }
        private ObjectSet<CarMark> _CarMarks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarModel> CarModels
        {
            get
            {
                if ((_CarModels == null))
                {
                    _CarModels = base.CreateObjectSet<CarModel>("CarModels");
                }
                return _CarModels;
            }
        }
        private ObjectSet<CarModel> _CarModels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Car> Cars
        {
            get
            {
                if ((_Cars == null))
                {
                    _Cars = base.CreateObjectSet<Car>("Cars");
                }
                return _Cars;
            }
        }
        private ObjectSet<Car> _Cars;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Color> Colors
        {
            get
            {
                if ((_Colors == null))
                {
                    _Colors = base.CreateObjectSet<Color>("Colors");
                }
                return _Colors;
            }
        }
        private ObjectSet<Color> _Colors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currency> Currencies
        {
            get
            {
                if ((_Currencies == null))
                {
                    _Currencies = base.CreateObjectSet<Currency>("Currencies");
                }
                return _Currencies;
            }
        }
        private ObjectSet<Currency> _Currencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventType> EventTypes
        {
            get
            {
                if ((_EventTypes == null))
                {
                    _EventTypes = base.CreateObjectSet<EventType>("EventTypes");
                }
                return _EventTypes;
            }
        }
        private ObjectSet<EventType> _EventTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Filling> Fillings
        {
            get
            {
                if ((_Fillings == null))
                {
                    _Fillings = base.CreateObjectSet<Filling>("Fillings");
                }
                return _Fillings;
            }
        }
        private ObjectSet<Filling> _Fillings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GearBoxType> GearBoxTypes
        {
            get
            {
                if ((_GearBoxTypes == null))
                {
                    _GearBoxTypes = base.CreateObjectSet<GearBoxType>("GearBoxTypes");
                }
                return _GearBoxTypes;
            }
        }
        private ObjectSet<GearBoxType> _GearBoxTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Place> Places
        {
            get
            {
                if ((_Places == null))
                {
                    _Places = base.CreateObjectSet<Place>("Places");
                }
                return _Places;
            }
        }
        private ObjectSet<Place> _Places;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlaceType> PlaceTypes
        {
            get
            {
                if ((_PlaceTypes == null))
                {
                    _PlaceTypes = base.CreateObjectSet<PlaceType>("PlaceTypes");
                }
                return _PlaceTypes;
            }
        }
        private ObjectSet<PlaceType> _PlaceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reminder> Reminders
        {
            get
            {
                if ((_Reminders == null))
                {
                    _Reminders = base.CreateObjectSet<Reminder>("Reminders");
                }
                return _Reminders;
            }
        }
        private ObjectSet<Reminder> _Reminders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Repair> Repairs
        {
            get
            {
                if ((_Repairs == null))
                {
                    _Repairs = base.CreateObjectSet<Repair>("Repairs");
                }
                return _Repairs;
            }
        }
        private ObjectSet<Repair> _Repairs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SparePartType> SparePartTypes
        {
            get
            {
                if ((_SparePartTypes == null))
                {
                    _SparePartTypes = base.CreateObjectSet<SparePartType>("SparePartTypes");
                }
                return _SparePartTypes;
            }
        }
        private ObjectSet<SparePartType> _SparePartTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRole> UserRoles
        {
            get
            {
                if ((_UserRoles == null))
                {
                    _UserRoles = base.CreateObjectSet<UserRole>("UserRoles");
                }
                return _UserRoles;
            }
        }
        private ObjectSet<UserRole> _UserRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarcaseTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarcaseTypes(CarcaseType carcaseType)
        {
            base.AddObject("CarcaseTypes", carcaseType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarInGarages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarInGarages(CarInGarage carInGarage)
        {
            base.AddObject("CarInGarages", carInGarage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarMarks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarMarks(CarMark carMark)
        {
            base.AddObject("CarMarks", carMark);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarModels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarModels(CarModel carModel)
        {
            base.AddObject("CarModels", carModel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cars EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCars(Car car)
        {
            base.AddObject("Cars", car);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Colors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToColors(Color color)
        {
            base.AddObject("Colors", color);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Currencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencies(Currency currency)
        {
            base.AddObject("Currencies", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTypes(EventType eventType)
        {
            base.AddObject("EventTypes", eventType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Fillings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFillings(Filling filling)
        {
            base.AddObject("Fillings", filling);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GearBoxTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGearBoxTypes(GearBoxType gearBoxType)
        {
            base.AddObject("GearBoxTypes", gearBoxType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Places EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlaces(Place place)
        {
            base.AddObject("Places", place);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlaceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlaceTypes(PlaceType placeType)
        {
            base.AddObject("PlaceTypes", placeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reminders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReminders(Reminder reminder)
        {
            base.AddObject("Reminders", reminder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Repairs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRepairs(Repair repair)
        {
            base.AddObject("Repairs", repair);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SparePartTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSparePartTypes(SparePartType sparePartType)
        {
            base.AddObject("SparePartTypes", sparePartType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRoles(UserRole userRole)
        {
            base.AddObject("UserRoles", userRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="Car")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Car : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Car object.
        /// </summary>
        /// <param name="carID">Initial value of the CarID property.</param>
        /// <param name="carModelID">Initial value of the CarModelID property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="fuelTypeID">Initial value of the FuelTypeID property.</param>
        /// <param name="buyDate">Initial value of the BuyDate property.</param>
        /// <param name="currencyID">Initial value of the CurrencyID property.</param>
        /// <param name="carVisible">Initial value of the CarVisible property.</param>
        /// <param name="carIsReadOnly">Initial value of the CarIsReadOnly property.</param>
        public static Car CreateCar(global::System.Int32 carID, global::System.Int32 carModelID, global::System.Int32 year, global::System.Int32 fuelTypeID, global::System.DateTime buyDate, global::System.Int32 currencyID, global::System.Boolean carVisible, global::System.Boolean carIsReadOnly)
        {
            Car car = new Car();
            car.CarID = carID;
            car.CarModelID = carModelID;
            car.Year = year;
            car.FuelTypeID = fuelTypeID;
            car.BuyDate = buyDate;
            car.CurrencyID = currencyID;
            car.CarVisible = carVisible;
            car.CarIsReadOnly = carIsReadOnly;
            return car;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarID
        {
            get
            {
                return _CarID;
            }
            set
            {
                if (_CarID != value)
                {
                    OnCarIDChanging(value);
                    ReportPropertyChanging("CarID");
                    _CarID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CarID");
                    OnCarIDChanged();
                }
            }
        }
        private global::System.Int32 _CarID;
        partial void OnCarIDChanging(global::System.Int32 value);
        partial void OnCarIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarModelID
        {
            get
            {
                return _CarModelID;
            }
            set
            {
                OnCarModelIDChanging(value);
                ReportPropertyChanging("CarModelID");
                _CarModelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarModelID");
                OnCarModelIDChanged();
            }
        }
        private global::System.Int32 _CarModelID;
        partial void OnCarModelIDChanging(global::System.Int32 value);
        partial void OnCarModelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ColorID
        {
            get
            {
                return _ColorID;
            }
            set
            {
                OnColorIDChanging(value);
                ReportPropertyChanging("ColorID");
                _ColorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ColorID");
                OnColorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ColorID;
        partial void OnColorIDChanging(Nullable<global::System.Int32> value);
        partial void OnColorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FuelTypeID
        {
            get
            {
                return _FuelTypeID;
            }
            set
            {
                OnFuelTypeIDChanging(value);
                ReportPropertyChanging("FuelTypeID");
                _FuelTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FuelTypeID");
                OnFuelTypeIDChanged();
            }
        }
        private global::System.Int32 _FuelTypeID;
        partial void OnFuelTypeIDChanging(global::System.Int32 value);
        partial void OnFuelTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarcaseTypeID
        {
            get
            {
                return _CarcaseTypeID;
            }
            set
            {
                OnCarcaseTypeIDChanging(value);
                ReportPropertyChanging("CarcaseTypeID");
                _CarcaseTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarcaseTypeID");
                OnCarcaseTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CarcaseTypeID;
        partial void OnCarcaseTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCarcaseTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GearBoxID
        {
            get
            {
                return _GearBoxID;
            }
            set
            {
                OnGearBoxIDChanging(value);
                ReportPropertyChanging("GearBoxID");
                _GearBoxID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GearBoxID");
                OnGearBoxIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GearBoxID;
        partial void OnGearBoxIDChanging(Nullable<global::System.Int32> value);
        partial void OnGearBoxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EngineVolume
        {
            get
            {
                return _EngineVolume;
            }
            set
            {
                OnEngineVolumeChanging(value);
                ReportPropertyChanging("EngineVolume");
                _EngineVolume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EngineVolume");
                OnEngineVolumeChanged();
            }
        }
        private Nullable<global::System.Int32> _EngineVolume;
        partial void OnEngineVolumeChanging(Nullable<global::System.Int32> value);
        partial void OnEngineVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BuyDate
        {
            get
            {
                return _BuyDate;
            }
            set
            {
                OnBuyDateChanging(value);
                ReportPropertyChanging("BuyDate");
                _BuyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuyDate");
                OnBuyDateChanged();
            }
        }
        private global::System.DateTime _BuyDate;
        partial void OnBuyDateChanging(global::System.DateTime value);
        partial void OnBuyDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyID
        {
            get
            {
                return _CurrencyID;
            }
            set
            {
                OnCurrencyIDChanging(value);
                ReportPropertyChanging("CurrencyID");
                _CurrencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyID");
                OnCurrencyIDChanged();
            }
        }
        private global::System.Int32 _CurrencyID;
        partial void OnCurrencyIDChanging(global::System.Int32 value);
        partial void OnCurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Mileage
        {
            get
            {
                return _Mileage;
            }
            set
            {
                OnMileageChanging(value);
                ReportPropertyChanging("Mileage");
                _Mileage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mileage");
                OnMileageChanged();
            }
        }
        private Nullable<global::System.Int32> _Mileage;
        partial void OnMileageChanging(Nullable<global::System.Int32> value);
        partial void OnMileageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MonthMileage
        {
            get
            {
                return _MonthMileage;
            }
            set
            {
                OnMonthMileageChanging(value);
                ReportPropertyChanging("MonthMileage");
                _MonthMileage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonthMileage");
                OnMonthMileageChanged();
            }
        }
        private Nullable<global::System.Int32> _MonthMileage;
        partial void OnMonthMileageChanging(Nullable<global::System.Int32> value);
        partial void OnMonthMileageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] CarPhoto
        {
            get
            {
                return StructuralObject.GetValidValue(_CarPhoto);
            }
            set
            {
                OnCarPhotoChanging(value);
                ReportPropertyChanging("CarPhoto");
                _CarPhoto = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CarPhoto");
                OnCarPhotoChanged();
            }
        }
        private global::System.Byte[] _CarPhoto;
        partial void OnCarPhotoChanging(global::System.Byte[] value);
        partial void OnCarPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CarVisible
        {
            get
            {
                return _CarVisible;
            }
            set
            {
                OnCarVisibleChanging(value);
                ReportPropertyChanging("CarVisible");
                _CarVisible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarVisible");
                OnCarVisibleChanged();
            }
        }
        private global::System.Boolean _CarVisible;
        partial void OnCarVisibleChanging(global::System.Boolean value);
        partial void OnCarVisibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CarIsReadOnly
        {
            get
            {
                return _CarIsReadOnly;
            }
            set
            {
                OnCarIsReadOnlyChanging(value);
                ReportPropertyChanging("CarIsReadOnly");
                _CarIsReadOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarIsReadOnly");
                OnCarIsReadOnlyChanged();
            }
        }
        private global::System.Boolean _CarIsReadOnly;
        partial void OnCarIsReadOnlyChanging(global::System.Boolean value);
        partial void OnCarIsReadOnlyChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="CarcaseType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarcaseType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarcaseType object.
        /// </summary>
        /// <param name="carcaseTypeID">Initial value of the CarcaseTypeID property.</param>
        /// <param name="carcaseTypeName">Initial value of the CarcaseTypeName property.</param>
        public static CarcaseType CreateCarcaseType(global::System.Int32 carcaseTypeID, global::System.String carcaseTypeName)
        {
            CarcaseType carcaseType = new CarcaseType();
            carcaseType.CarcaseTypeID = carcaseTypeID;
            carcaseType.CarcaseTypeName = carcaseTypeName;
            return carcaseType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarcaseTypeID
        {
            get
            {
                return _CarcaseTypeID;
            }
            set
            {
                if (_CarcaseTypeID != value)
                {
                    OnCarcaseTypeIDChanging(value);
                    ReportPropertyChanging("CarcaseTypeID");
                    _CarcaseTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CarcaseTypeID");
                    OnCarcaseTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CarcaseTypeID;
        partial void OnCarcaseTypeIDChanging(global::System.Int32 value);
        partial void OnCarcaseTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CarcaseTypeName
        {
            get
            {
                return _CarcaseTypeName;
            }
            set
            {
                OnCarcaseTypeNameChanging(value);
                ReportPropertyChanging("CarcaseTypeName");
                _CarcaseTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CarcaseTypeName");
                OnCarcaseTypeNameChanged();
            }
        }
        private global::System.String _CarcaseTypeName;
        partial void OnCarcaseTypeNameChanging(global::System.String value);
        partial void OnCarcaseTypeNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="CarInGarage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarInGarage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarInGarage object.
        /// </summary>
        /// <param name="carID">Initial value of the CarID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="isOwner">Initial value of the IsOwner property.</param>
        public static CarInGarage CreateCarInGarage(global::System.Int32 carID, global::System.Int32 userID, global::System.Boolean isOwner)
        {
            CarInGarage carInGarage = new CarInGarage();
            carInGarage.CarID = carID;
            carInGarage.UserID = userID;
            carInGarage.IsOwner = isOwner;
            return carInGarage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarID
        {
            get
            {
                return _CarID;
            }
            set
            {
                if (_CarID != value)
                {
                    OnCarIDChanging(value);
                    ReportPropertyChanging("CarID");
                    _CarID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CarID");
                    OnCarIDChanged();
                }
            }
        }
        private global::System.Int32 _CarID;
        partial void OnCarIDChanging(global::System.Int32 value);
        partial void OnCarIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOwner
        {
            get
            {
                return _IsOwner;
            }
            set
            {
                OnIsOwnerChanging(value);
                ReportPropertyChanging("IsOwner");
                _IsOwner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOwner");
                OnIsOwnerChanged();
            }
        }
        private global::System.Boolean _IsOwner;
        partial void OnIsOwnerChanging(global::System.Boolean value);
        partial void OnIsOwnerChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="CarMark")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarMark : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarMark object.
        /// </summary>
        /// <param name="carMarkID">Initial value of the CarMarkID property.</param>
        /// <param name="carMarkName">Initial value of the CarMarkName property.</param>
        /// <param name="isUserMark">Initial value of the IsUserMark property.</param>
        public static CarMark CreateCarMark(global::System.Int32 carMarkID, global::System.String carMarkName, global::System.Boolean isUserMark)
        {
            CarMark carMark = new CarMark();
            carMark.CarMarkID = carMarkID;
            carMark.CarMarkName = carMarkName;
            carMark.IsUserMark = isUserMark;
            return carMark;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarMarkID
        {
            get
            {
                return _CarMarkID;
            }
            set
            {
                if (_CarMarkID != value)
                {
                    OnCarMarkIDChanging(value);
                    ReportPropertyChanging("CarMarkID");
                    _CarMarkID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CarMarkID");
                    OnCarMarkIDChanged();
                }
            }
        }
        private global::System.Int32 _CarMarkID;
        partial void OnCarMarkIDChanging(global::System.Int32 value);
        partial void OnCarMarkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CarMarkName
        {
            get
            {
                return _CarMarkName;
            }
            set
            {
                OnCarMarkNameChanging(value);
                ReportPropertyChanging("CarMarkName");
                _CarMarkName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CarMarkName");
                OnCarMarkNameChanged();
            }
        }
        private global::System.String _CarMarkName;
        partial void OnCarMarkNameChanging(global::System.String value);
        partial void OnCarMarkNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsUserMark
        {
            get
            {
                return _IsUserMark;
            }
            set
            {
                OnIsUserMarkChanging(value);
                ReportPropertyChanging("IsUserMark");
                _IsUserMark = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsUserMark");
                OnIsUserMarkChanged();
            }
        }
        private global::System.Boolean _IsUserMark;
        partial void OnIsUserMarkChanging(global::System.Boolean value);
        partial void OnIsUserMarkChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="CarModel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarModel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarModel object.
        /// </summary>
        /// <param name="carModelID">Initial value of the CarModelID property.</param>
        /// <param name="carMarkID">Initial value of the CarMarkID property.</param>
        /// <param name="isUserModel">Initial value of the IsUserModel property.</param>
        public static CarModel CreateCarModel(global::System.Int32 carModelID, global::System.Int32 carMarkID, global::System.Boolean isUserModel)
        {
            CarModel carModel = new CarModel();
            carModel.CarModelID = carModelID;
            carModel.CarMarkID = carMarkID;
            carModel.IsUserModel = isUserModel;
            return carModel;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarModelID
        {
            get
            {
                return _CarModelID;
            }
            set
            {
                if (_CarModelID != value)
                {
                    OnCarModelIDChanging(value);
                    ReportPropertyChanging("CarModelID");
                    _CarModelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CarModelID");
                    OnCarModelIDChanged();
                }
            }
        }
        private global::System.Int32 _CarModelID;
        partial void OnCarModelIDChanging(global::System.Int32 value);
        partial void OnCarModelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarMarkID
        {
            get
            {
                return _CarMarkID;
            }
            set
            {
                OnCarMarkIDChanging(value);
                ReportPropertyChanging("CarMarkID");
                _CarMarkID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarMarkID");
                OnCarMarkIDChanged();
            }
        }
        private global::System.Int32 _CarMarkID;
        partial void OnCarMarkIDChanging(global::System.Int32 value);
        partial void OnCarMarkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsUserModel
        {
            get
            {
                return _IsUserModel;
            }
            set
            {
                OnIsUserModelChanging(value);
                ReportPropertyChanging("IsUserModel");
                _IsUserModel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsUserModel");
                OnIsUserModelChanged();
            }
        }
        private global::System.Boolean _IsUserModel;
        partial void OnIsUserModelChanging(global::System.Boolean value);
        partial void OnIsUserModelChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="Color")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Color : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Color object.
        /// </summary>
        /// <param name="colorID">Initial value of the ColorID property.</param>
        /// <param name="colorName">Initial value of the ColorName property.</param>
        public static Color CreateColor(global::System.Int32 colorID, global::System.String colorName)
        {
            Color color = new Color();
            color.ColorID = colorID;
            color.ColorName = colorName;
            return color;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColorID
        {
            get
            {
                return _ColorID;
            }
            set
            {
                if (_ColorID != value)
                {
                    OnColorIDChanging(value);
                    ReportPropertyChanging("ColorID");
                    _ColorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ColorID");
                    OnColorIDChanged();
                }
            }
        }
        private global::System.Int32 _ColorID;
        partial void OnColorIDChanging(global::System.Int32 value);
        partial void OnColorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ColorName
        {
            get
            {
                return _ColorName;
            }
            set
            {
                OnColorNameChanging(value);
                ReportPropertyChanging("ColorName");
                _ColorName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ColorName");
                OnColorNameChanged();
            }
        }
        private global::System.String _ColorName;
        partial void OnColorNameChanging(global::System.String value);
        partial void OnColorNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="Currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Currency object.
        /// </summary>
        /// <param name="currencyID">Initial value of the CurrencyID property.</param>
        /// <param name="currencyName">Initial value of the CurrencyName property.</param>
        public static Currency CreateCurrency(global::System.Int32 currencyID, global::System.String currencyName)
        {
            Currency currency = new Currency();
            currency.CurrencyID = currencyID;
            currency.CurrencyName = currencyName;
            return currency;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyID
        {
            get
            {
                return _CurrencyID;
            }
            set
            {
                if (_CurrencyID != value)
                {
                    OnCurrencyIDChanging(value);
                    ReportPropertyChanging("CurrencyID");
                    _CurrencyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CurrencyID");
                    OnCurrencyIDChanged();
                }
            }
        }
        private global::System.Int32 _CurrencyID;
        partial void OnCurrencyIDChanging(global::System.Int32 value);
        partial void OnCurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrencyName
        {
            get
            {
                return _CurrencyName;
            }
            set
            {
                OnCurrencyNameChanging(value);
                ReportPropertyChanging("CurrencyName");
                _CurrencyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CurrencyName");
                OnCurrencyNameChanged();
            }
        }
        private global::System.String _CurrencyName;
        partial void OnCurrencyNameChanging(global::System.String value);
        partial void OnCurrencyNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="eventTypeID">Initial value of the EventTypeID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="generalCost">Initial value of the GeneralCost property.</param>
        /// <param name="placeID">Initial value of the PlaceID property.</param>
        /// <param name="carID">Initial value of the CarID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Event CreateEvent(global::System.Int32 eventID, global::System.Int32 eventTypeID, global::System.DateTime date, global::System.Int32 generalCost, global::System.Int32 placeID, global::System.Int32 carID, global::System.Int32 userID)
        {
            Event @event = new Event();
            @event.EventID = eventID;
            @event.EventTypeID = eventTypeID;
            @event.Date = date;
            @event.GeneralCost = generalCost;
            @event.PlaceID = placeID;
            @event.CarID = carID;
            @event.UserID = userID;
            return @event;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                if (_EventID != value)
                {
                    OnEventIDChanging(value);
                    ReportPropertyChanging("EventID");
                    _EventID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventID");
                    OnEventIDChanged();
                }
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventTypeID
        {
            get
            {
                return _EventTypeID;
            }
            set
            {
                OnEventTypeIDChanging(value);
                ReportPropertyChanging("EventTypeID");
                _EventTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTypeID");
                OnEventTypeIDChanged();
            }
        }
        private global::System.Int32 _EventTypeID;
        partial void OnEventTypeIDChanging(global::System.Int32 value);
        partial void OnEventTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Mileage
        {
            get
            {
                return _Mileage;
            }
            set
            {
                OnMileageChanging(value);
                ReportPropertyChanging("Mileage");
                _Mileage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mileage");
                OnMileageChanged();
            }
        }
        private Nullable<global::System.Int32> _Mileage;
        partial void OnMileageChanging(Nullable<global::System.Int32> value);
        partial void OnMileageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GeneralCost
        {
            get
            {
                return _GeneralCost;
            }
            set
            {
                OnGeneralCostChanging(value);
                ReportPropertyChanging("GeneralCost");
                _GeneralCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GeneralCost");
                OnGeneralCostChanged();
            }
        }
        private global::System.Int32 _GeneralCost;
        partial void OnGeneralCostChanging(global::System.Int32 value);
        partial void OnGeneralCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EventComments
        {
            get
            {
                return _EventComments;
            }
            set
            {
                OnEventCommentsChanging(value);
                ReportPropertyChanging("EventComments");
                _EventComments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EventComments");
                OnEventCommentsChanged();
            }
        }
        private global::System.String _EventComments;
        partial void OnEventCommentsChanging(global::System.String value);
        partial void OnEventCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlaceID
        {
            get
            {
                return _PlaceID;
            }
            set
            {
                OnPlaceIDChanging(value);
                ReportPropertyChanging("PlaceID");
                _PlaceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaceID");
                OnPlaceIDChanged();
            }
        }
        private global::System.Int32 _PlaceID;
        partial void OnPlaceIDChanging(global::System.Int32 value);
        partial void OnPlaceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarID
        {
            get
            {
                return _CarID;
            }
            set
            {
                OnCarIDChanging(value);
                ReportPropertyChanging("CarID");
                _CarID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarID");
                OnCarIDChanged();
            }
        }
        private global::System.Int32 _CarID;
        partial void OnCarIDChanging(global::System.Int32 value);
        partial void OnCarIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="EventType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventType object.
        /// </summary>
        /// <param name="eventTypeID">Initial value of the EventTypeID property.</param>
        /// <param name="eventTypeName">Initial value of the EventTypeName property.</param>
        /// <param name="isUserEventType">Initial value of the IsUserEventType property.</param>
        public static EventType CreateEventType(global::System.Int32 eventTypeID, global::System.String eventTypeName, global::System.Boolean isUserEventType)
        {
            EventType eventType = new EventType();
            eventType.EventTypeID = eventTypeID;
            eventType.EventTypeName = eventTypeName;
            eventType.IsUserEventType = isUserEventType;
            return eventType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventTypeID
        {
            get
            {
                return _EventTypeID;
            }
            set
            {
                if (_EventTypeID != value)
                {
                    OnEventTypeIDChanging(value);
                    ReportPropertyChanging("EventTypeID");
                    _EventTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventTypeID");
                    OnEventTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _EventTypeID;
        partial void OnEventTypeIDChanging(global::System.Int32 value);
        partial void OnEventTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventTypeName
        {
            get
            {
                return _EventTypeName;
            }
            set
            {
                OnEventTypeNameChanging(value);
                ReportPropertyChanging("EventTypeName");
                _EventTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventTypeName");
                OnEventTypeNameChanged();
            }
        }
        private global::System.String _EventTypeName;
        partial void OnEventTypeNameChanging(global::System.String value);
        partial void OnEventTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsUserEventType
        {
            get
            {
                return _IsUserEventType;
            }
            set
            {
                OnIsUserEventTypeChanging(value);
                ReportPropertyChanging("IsUserEventType");
                _IsUserEventType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsUserEventType");
                OnIsUserEventTypeChanged();
            }
        }
        private global::System.Boolean _IsUserEventType;
        partial void OnIsUserEventTypeChanging(global::System.Boolean value);
        partial void OnIsUserEventTypeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="Filling")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Filling : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Filling object.
        /// </summary>
        /// <param name="fillingID">Initial value of the FillingID property.</param>
        /// <param name="fuelTypeID">Initial value of the FuelTypeID property.</param>
        /// <param name="fuelCount">Initial value of the FuelCount property.</param>
        /// <param name="unitCost">Initial value of the UnitCost property.</param>
        /// <param name="isFullTank">Initial value of the IsFullTank property.</param>
        /// <param name="isForgotPreviousFilling">Initial value of the IsForgotPreviousFilling property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        public static Filling CreateFilling(global::System.Int32 fillingID, global::System.Int32 fuelTypeID, global::System.Int32 fuelCount, global::System.Int32 unitCost, global::System.Boolean isFullTank, global::System.Boolean isForgotPreviousFilling, global::System.Int32 eventID)
        {
            Filling filling = new Filling();
            filling.FillingID = fillingID;
            filling.FuelTypeID = fuelTypeID;
            filling.FuelCount = fuelCount;
            filling.UnitCost = unitCost;
            filling.IsFullTank = isFullTank;
            filling.IsForgotPreviousFilling = isForgotPreviousFilling;
            filling.EventID = eventID;
            return filling;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FillingID
        {
            get
            {
                return _FillingID;
            }
            set
            {
                if (_FillingID != value)
                {
                    OnFillingIDChanging(value);
                    ReportPropertyChanging("FillingID");
                    _FillingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FillingID");
                    OnFillingIDChanged();
                }
            }
        }
        private global::System.Int32 _FillingID;
        partial void OnFillingIDChanging(global::System.Int32 value);
        partial void OnFillingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FuelTypeID
        {
            get
            {
                return _FuelTypeID;
            }
            set
            {
                OnFuelTypeIDChanging(value);
                ReportPropertyChanging("FuelTypeID");
                _FuelTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FuelTypeID");
                OnFuelTypeIDChanged();
            }
        }
        private global::System.Int32 _FuelTypeID;
        partial void OnFuelTypeIDChanging(global::System.Int32 value);
        partial void OnFuelTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FuelCount
        {
            get
            {
                return _FuelCount;
            }
            set
            {
                OnFuelCountChanging(value);
                ReportPropertyChanging("FuelCount");
                _FuelCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FuelCount");
                OnFuelCountChanged();
            }
        }
        private global::System.Int32 _FuelCount;
        partial void OnFuelCountChanging(global::System.Int32 value);
        partial void OnFuelCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnitCost
        {
            get
            {
                return _UnitCost;
            }
            set
            {
                OnUnitCostChanging(value);
                ReportPropertyChanging("UnitCost");
                _UnitCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitCost");
                OnUnitCostChanged();
            }
        }
        private global::System.Int32 _UnitCost;
        partial void OnUnitCostChanging(global::System.Int32 value);
        partial void OnUnitCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFullTank
        {
            get
            {
                return _IsFullTank;
            }
            set
            {
                OnIsFullTankChanging(value);
                ReportPropertyChanging("IsFullTank");
                _IsFullTank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFullTank");
                OnIsFullTankChanged();
            }
        }
        private global::System.Boolean _IsFullTank;
        partial void OnIsFullTankChanging(global::System.Boolean value);
        partial void OnIsFullTankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsForgotPreviousFilling
        {
            get
            {
                return _IsForgotPreviousFilling;
            }
            set
            {
                OnIsForgotPreviousFillingChanging(value);
                ReportPropertyChanging("IsForgotPreviousFilling");
                _IsForgotPreviousFilling = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsForgotPreviousFilling");
                OnIsForgotPreviousFillingChanged();
            }
        }
        private global::System.Boolean _IsForgotPreviousFilling;
        partial void OnIsForgotPreviousFillingChanging(global::System.Boolean value);
        partial void OnIsForgotPreviousFillingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="GearBoxType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GearBoxType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GearBoxType object.
        /// </summary>
        /// <param name="gearBoxID">Initial value of the GearBoxID property.</param>
        /// <param name="gearBoxName">Initial value of the GearBoxName property.</param>
        public static GearBoxType CreateGearBoxType(global::System.Int32 gearBoxID, global::System.String gearBoxName)
        {
            GearBoxType gearBoxType = new GearBoxType();
            gearBoxType.GearBoxID = gearBoxID;
            gearBoxType.GearBoxName = gearBoxName;
            return gearBoxType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GearBoxID
        {
            get
            {
                return _GearBoxID;
            }
            set
            {
                if (_GearBoxID != value)
                {
                    OnGearBoxIDChanging(value);
                    ReportPropertyChanging("GearBoxID");
                    _GearBoxID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GearBoxID");
                    OnGearBoxIDChanged();
                }
            }
        }
        private global::System.Int32 _GearBoxID;
        partial void OnGearBoxIDChanging(global::System.Int32 value);
        partial void OnGearBoxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GearBoxName
        {
            get
            {
                return _GearBoxName;
            }
            set
            {
                OnGearBoxNameChanging(value);
                ReportPropertyChanging("GearBoxName");
                _GearBoxName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GearBoxName");
                OnGearBoxNameChanged();
            }
        }
        private global::System.String _GearBoxName;
        partial void OnGearBoxNameChanging(global::System.String value);
        partial void OnGearBoxNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="messageID">Initial value of the MessageID property.</param>
        /// <param name="theme">Initial value of the Theme property.</param>
        /// <param name="chainID">Initial value of the ChainID property.</param>
        /// <param name="senderID">Initial value of the SenderID property.</param>
        /// <param name="isDeleteBySender">Initial value of the IsDeleteBySender property.</param>
        /// <param name="recipientID">Initial value of the RecipientID property.</param>
        /// <param name="isDeleteByRecipient">Initial value of the IsDeleteByRecipient property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static Message CreateMessage(global::System.Int32 messageID, global::System.String theme, global::System.Int32 chainID, global::System.Int32 senderID, global::System.Boolean isDeleteBySender, global::System.Int32 recipientID, global::System.Boolean isDeleteByRecipient, global::System.String text)
        {
            Message message = new Message();
            message.MessageID = messageID;
            message.Theme = theme;
            message.ChainID = chainID;
            message.SenderID = senderID;
            message.IsDeleteBySender = isDeleteBySender;
            message.RecipientID = recipientID;
            message.IsDeleteByRecipient = isDeleteByRecipient;
            message.Text = text;
            return message;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageID
        {
            get
            {
                return _MessageID;
            }
            set
            {
                if (_MessageID != value)
                {
                    OnMessageIDChanging(value);
                    ReportPropertyChanging("MessageID");
                    _MessageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageID");
                    OnMessageIDChanged();
                }
            }
        }
        private global::System.Int32 _MessageID;
        partial void OnMessageIDChanging(global::System.Int32 value);
        partial void OnMessageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Theme
        {
            get
            {
                return _Theme;
            }
            set
            {
                OnThemeChanging(value);
                ReportPropertyChanging("Theme");
                _Theme = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Theme");
                OnThemeChanged();
            }
        }
        private global::System.String _Theme;
        partial void OnThemeChanging(global::System.String value);
        partial void OnThemeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChainID
        {
            get
            {
                return _ChainID;
            }
            set
            {
                OnChainIDChanging(value);
                ReportPropertyChanging("ChainID");
                _ChainID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChainID");
                OnChainIDChanged();
            }
        }
        private global::System.Int32 _ChainID;
        partial void OnChainIDChanging(global::System.Int32 value);
        partial void OnChainIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SenderID
        {
            get
            {
                return _SenderID;
            }
            set
            {
                OnSenderIDChanging(value);
                ReportPropertyChanging("SenderID");
                _SenderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SenderID");
                OnSenderIDChanged();
            }
        }
        private global::System.Int32 _SenderID;
        partial void OnSenderIDChanging(global::System.Int32 value);
        partial void OnSenderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleteBySender
        {
            get
            {
                return _IsDeleteBySender;
            }
            set
            {
                OnIsDeleteBySenderChanging(value);
                ReportPropertyChanging("IsDeleteBySender");
                _IsDeleteBySender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleteBySender");
                OnIsDeleteBySenderChanged();
            }
        }
        private global::System.Boolean _IsDeleteBySender;
        partial void OnIsDeleteBySenderChanging(global::System.Boolean value);
        partial void OnIsDeleteBySenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecipientID
        {
            get
            {
                return _RecipientID;
            }
            set
            {
                OnRecipientIDChanging(value);
                ReportPropertyChanging("RecipientID");
                _RecipientID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecipientID");
                OnRecipientIDChanged();
            }
        }
        private global::System.Int32 _RecipientID;
        partial void OnRecipientIDChanging(global::System.Int32 value);
        partial void OnRecipientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleteByRecipient
        {
            get
            {
                return _IsDeleteByRecipient;
            }
            set
            {
                OnIsDeleteByRecipientChanging(value);
                ReportPropertyChanging("IsDeleteByRecipient");
                _IsDeleteByRecipient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleteByRecipient");
                OnIsDeleteByRecipientChanged();
            }
        }
        private global::System.Boolean _IsDeleteByRecipient;
        partial void OnIsDeleteByRecipientChanging(global::System.Boolean value);
        partial void OnIsDeleteByRecipientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="Place")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Place : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Place object.
        /// </summary>
        /// <param name="placeID">Initial value of the PlaceID property.</param>
        /// <param name="placeName">Initial value of the PlaceName property.</param>
        /// <param name="placeTypeID">Initial value of the PlaceTypeID property.</param>
        public static Place CreatePlace(global::System.Int32 placeID, global::System.String placeName, global::System.Int32 placeTypeID)
        {
            Place place = new Place();
            place.PlaceID = placeID;
            place.PlaceName = placeName;
            place.PlaceTypeID = placeTypeID;
            return place;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlaceID
        {
            get
            {
                return _PlaceID;
            }
            set
            {
                if (_PlaceID != value)
                {
                    OnPlaceIDChanging(value);
                    ReportPropertyChanging("PlaceID");
                    _PlaceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlaceID");
                    OnPlaceIDChanged();
                }
            }
        }
        private global::System.Int32 _PlaceID;
        partial void OnPlaceIDChanging(global::System.Int32 value);
        partial void OnPlaceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlaceName
        {
            get
            {
                return _PlaceName;
            }
            set
            {
                OnPlaceNameChanging(value);
                ReportPropertyChanging("PlaceName");
                _PlaceName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PlaceName");
                OnPlaceNameChanged();
            }
        }
        private global::System.String _PlaceName;
        partial void OnPlaceNameChanging(global::System.String value);
        partial void OnPlaceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlaceTypeID
        {
            get
            {
                return _PlaceTypeID;
            }
            set
            {
                OnPlaceTypeIDChanging(value);
                ReportPropertyChanging("PlaceTypeID");
                _PlaceTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaceTypeID");
                OnPlaceTypeIDChanged();
            }
        }
        private global::System.Int32 _PlaceTypeID;
        partial void OnPlaceTypeIDChanging(global::System.Int32 value);
        partial void OnPlaceTypeIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="PlaceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlaceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlaceType object.
        /// </summary>
        /// <param name="placeTypeID">Initial value of the PlaceTypeID property.</param>
        /// <param name="placeTypeName">Initial value of the PlaceTypeName property.</param>
        public static PlaceType CreatePlaceType(global::System.Int32 placeTypeID, global::System.String placeTypeName)
        {
            PlaceType placeType = new PlaceType();
            placeType.PlaceTypeID = placeTypeID;
            placeType.PlaceTypeName = placeTypeName;
            return placeType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlaceTypeID
        {
            get
            {
                return _PlaceTypeID;
            }
            set
            {
                if (_PlaceTypeID != value)
                {
                    OnPlaceTypeIDChanging(value);
                    ReportPropertyChanging("PlaceTypeID");
                    _PlaceTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlaceTypeID");
                    OnPlaceTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _PlaceTypeID;
        partial void OnPlaceTypeIDChanging(global::System.Int32 value);
        partial void OnPlaceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlaceTypeName
        {
            get
            {
                return _PlaceTypeName;
            }
            set
            {
                OnPlaceTypeNameChanging(value);
                ReportPropertyChanging("PlaceTypeName");
                _PlaceTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PlaceTypeName");
                OnPlaceTypeNameChanged();
            }
        }
        private global::System.String _PlaceTypeName;
        partial void OnPlaceTypeNameChanging(global::System.String value);
        partial void OnPlaceTypeNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="Reminder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reminder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reminder object.
        /// </summary>
        /// <param name="reminderID">Initial value of the ReminderID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="reminderName">Initial value of the ReminderName property.</param>
        /// <param name="isRemindByEmail">Initial value of the IsRemindByEmail property.</param>
        /// <param name="isReminderDone">Initial value of the IsReminderDone property.</param>
        /// <param name="carID">Initial value of the CarID property.</param>
        public static Reminder CreateReminder(global::System.Int32 reminderID, global::System.Int32 userID, global::System.DateTime date, global::System.String reminderName, global::System.Boolean isRemindByEmail, global::System.Boolean isReminderDone, global::System.Int32 carID)
        {
            Reminder reminder = new Reminder();
            reminder.ReminderID = reminderID;
            reminder.UserID = userID;
            reminder.Date = date;
            reminder.ReminderName = reminderName;
            reminder.IsRemindByEmail = isRemindByEmail;
            reminder.IsReminderDone = isReminderDone;
            reminder.CarID = carID;
            return reminder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReminderID
        {
            get
            {
                return _ReminderID;
            }
            set
            {
                if (_ReminderID != value)
                {
                    OnReminderIDChanging(value);
                    ReportPropertyChanging("ReminderID");
                    _ReminderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReminderID");
                    OnReminderIDChanged();
                }
            }
        }
        private global::System.Int32 _ReminderID;
        partial void OnReminderIDChanging(global::System.Int32 value);
        partial void OnReminderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReminderName
        {
            get
            {
                return _ReminderName;
            }
            set
            {
                OnReminderNameChanging(value);
                ReportPropertyChanging("ReminderName");
                _ReminderName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReminderName");
                OnReminderNameChanged();
            }
        }
        private global::System.String _ReminderName;
        partial void OnReminderNameChanging(global::System.String value);
        partial void OnReminderNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> FinishTime
        {
            get
            {
                return _FinishTime;
            }
            set
            {
                OnFinishTimeChanging(value);
                ReportPropertyChanging("FinishTime");
                _FinishTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinishTime");
                OnFinishTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _FinishTime;
        partial void OnFinishTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnFinishTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRemindByEmail
        {
            get
            {
                return _IsRemindByEmail;
            }
            set
            {
                OnIsRemindByEmailChanging(value);
                ReportPropertyChanging("IsRemindByEmail");
                _IsRemindByEmail = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRemindByEmail");
                OnIsRemindByEmailChanged();
            }
        }
        private global::System.Boolean _IsRemindByEmail;
        partial void OnIsRemindByEmailChanging(global::System.Boolean value);
        partial void OnIsRemindByEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReminderCountOfMileage
        {
            get
            {
                return _ReminderCountOfMileage;
            }
            set
            {
                OnReminderCountOfMileageChanging(value);
                ReportPropertyChanging("ReminderCountOfMileage");
                _ReminderCountOfMileage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReminderCountOfMileage");
                OnReminderCountOfMileageChanged();
            }
        }
        private Nullable<global::System.Int32> _ReminderCountOfMileage;
        partial void OnReminderCountOfMileageChanging(Nullable<global::System.Int32> value);
        partial void OnReminderCountOfMileageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReminderCountOfDays
        {
            get
            {
                return _ReminderCountOfDays;
            }
            set
            {
                OnReminderCountOfDaysChanging(value);
                ReportPropertyChanging("ReminderCountOfDays");
                _ReminderCountOfDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReminderCountOfDays");
                OnReminderCountOfDaysChanged();
            }
        }
        private Nullable<global::System.Int32> _ReminderCountOfDays;
        partial void OnReminderCountOfDaysChanging(Nullable<global::System.Int32> value);
        partial void OnReminderCountOfDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReminderDone
        {
            get
            {
                return _IsReminderDone;
            }
            set
            {
                OnIsReminderDoneChanging(value);
                ReportPropertyChanging("IsReminderDone");
                _IsReminderDone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReminderDone");
                OnIsReminderDoneChanged();
            }
        }
        private global::System.Boolean _IsReminderDone;
        partial void OnIsReminderDoneChanging(global::System.Boolean value);
        partial void OnIsReminderDoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarID
        {
            get
            {
                return _CarID;
            }
            set
            {
                OnCarIDChanging(value);
                ReportPropertyChanging("CarID");
                _CarID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarID");
                OnCarIDChanged();
            }
        }
        private global::System.Int32 _CarID;
        partial void OnCarIDChanging(global::System.Int32 value);
        partial void OnCarIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="Repair")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Repair : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Repair object.
        /// </summary>
        /// <param name="repairID">Initial value of the RepairID property.</param>
        /// <param name="sparePartTypeID">Initial value of the SparePartTypeID property.</param>
        /// <param name="sparePartCost">Initial value of the SparePartCost property.</param>
        /// <param name="workCost">Initial value of the WorkCost property.</param>
        /// <param name="isRepair">Initial value of the IsRepair property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        public static Repair CreateRepair(global::System.Int32 repairID, global::System.Int32 sparePartTypeID, global::System.Int32 sparePartCost, global::System.Int32 workCost, global::System.Boolean isRepair, global::System.Int32 eventID)
        {
            Repair repair = new Repair();
            repair.RepairID = repairID;
            repair.SparePartTypeID = sparePartTypeID;
            repair.SparePartCost = sparePartCost;
            repair.WorkCost = workCost;
            repair.IsRepair = isRepair;
            repair.EventID = eventID;
            return repair;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RepairID
        {
            get
            {
                return _RepairID;
            }
            set
            {
                if (_RepairID != value)
                {
                    OnRepairIDChanging(value);
                    ReportPropertyChanging("RepairID");
                    _RepairID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RepairID");
                    OnRepairIDChanged();
                }
            }
        }
        private global::System.Int32 _RepairID;
        partial void OnRepairIDChanging(global::System.Int32 value);
        partial void OnRepairIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SparePartTypeID
        {
            get
            {
                return _SparePartTypeID;
            }
            set
            {
                OnSparePartTypeIDChanging(value);
                ReportPropertyChanging("SparePartTypeID");
                _SparePartTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SparePartTypeID");
                OnSparePartTypeIDChanged();
            }
        }
        private global::System.Int32 _SparePartTypeID;
        partial void OnSparePartTypeIDChanging(global::System.Int32 value);
        partial void OnSparePartTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SparePartProducer
        {
            get
            {
                return _SparePartProducer;
            }
            set
            {
                OnSparePartProducerChanging(value);
                ReportPropertyChanging("SparePartProducer");
                _SparePartProducer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SparePartProducer");
                OnSparePartProducerChanged();
            }
        }
        private global::System.String _SparePartProducer;
        partial void OnSparePartProducerChanging(global::System.String value);
        partial void OnSparePartProducerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SparePartModel
        {
            get
            {
                return _SparePartModel;
            }
            set
            {
                OnSparePartModelChanging(value);
                ReportPropertyChanging("SparePartModel");
                _SparePartModel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SparePartModel");
                OnSparePartModelChanged();
            }
        }
        private global::System.String _SparePartModel;
        partial void OnSparePartModelChanging(global::System.String value);
        partial void OnSparePartModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SparePartCost
        {
            get
            {
                return _SparePartCost;
            }
            set
            {
                OnSparePartCostChanging(value);
                ReportPropertyChanging("SparePartCost");
                _SparePartCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SparePartCost");
                OnSparePartCostChanged();
            }
        }
        private global::System.Int32 _SparePartCost;
        partial void OnSparePartCostChanging(global::System.Int32 value);
        partial void OnSparePartCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkCost
        {
            get
            {
                return _WorkCost;
            }
            set
            {
                OnWorkCostChanging(value);
                ReportPropertyChanging("WorkCost");
                _WorkCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkCost");
                OnWorkCostChanged();
            }
        }
        private global::System.Int32 _WorkCost;
        partial void OnWorkCostChanging(global::System.Int32 value);
        partial void OnWorkCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRepair
        {
            get
            {
                return _IsRepair;
            }
            set
            {
                OnIsRepairChanging(value);
                ReportPropertyChanging("IsRepair");
                _IsRepair = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRepair");
                OnIsRepairChanged();
            }
        }
        private global::System.Boolean _IsRepair;
        partial void OnIsRepairChanging(global::System.Boolean value);
        partial void OnIsRepairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="SparePartType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SparePartType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SparePartType object.
        /// </summary>
        /// <param name="sparePartTypeID">Initial value of the SparePartTypeID property.</param>
        /// <param name="sparePartTypeName">Initial value of the SparePartTypeName property.</param>
        public static SparePartType CreateSparePartType(global::System.Int32 sparePartTypeID, global::System.String sparePartTypeName)
        {
            SparePartType sparePartType = new SparePartType();
            sparePartType.SparePartTypeID = sparePartTypeID;
            sparePartType.SparePartTypeName = sparePartTypeName;
            return sparePartType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SparePartTypeID
        {
            get
            {
                return _SparePartTypeID;
            }
            set
            {
                if (_SparePartTypeID != value)
                {
                    OnSparePartTypeIDChanging(value);
                    ReportPropertyChanging("SparePartTypeID");
                    _SparePartTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SparePartTypeID");
                    OnSparePartTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _SparePartTypeID;
        partial void OnSparePartTypeIDChanging(global::System.Int32 value);
        partial void OnSparePartTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SparePartTypeName
        {
            get
            {
                return _SparePartTypeName;
            }
            set
            {
                OnSparePartTypeNameChanging(value);
                ReportPropertyChanging("SparePartTypeName");
                _SparePartTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SparePartTypeName");
                OnSparePartTypeNameChanged();
            }
        }
        private global::System.String _SparePartTypeName;
        partial void OnSparePartTypeNameChanging(global::System.String value);
        partial void OnSparePartTypeNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="userNick">Initial value of the UserNick property.</param>
        /// <param name="userEmail">Initial value of the UserEmail property.</param>
        /// <param name="userPassword">Initial value of the UserPassword property.</param>
        /// <param name="userRoleID">Initial value of the UserRoleID property.</param>
        public static User CreateUser(global::System.Int32 userID, global::System.String userNick, global::System.String userEmail, global::System.String userPassword, global::System.Int32 userRoleID)
        {
            User user = new User();
            user.UserID = userID;
            user.UserNick = userNick;
            user.UserEmail = userEmail;
            user.UserPassword = userPassword;
            user.UserRoleID = userRoleID;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserNick
        {
            get
            {
                return _UserNick;
            }
            set
            {
                OnUserNickChanging(value);
                ReportPropertyChanging("UserNick");
                _UserNick = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserNick");
                OnUserNickChanged();
            }
        }
        private global::System.String _UserNick;
        partial void OnUserNickChanging(global::System.String value);
        partial void OnUserNickChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserEmail
        {
            get
            {
                return _UserEmail;
            }
            set
            {
                OnUserEmailChanging(value);
                ReportPropertyChanging("UserEmail");
                _UserEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserEmail");
                OnUserEmailChanged();
            }
        }
        private global::System.String _UserEmail;
        partial void OnUserEmailChanging(global::System.String value);
        partial void OnUserEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserPassword
        {
            get
            {
                return _UserPassword;
            }
            set
            {
                OnUserPasswordChanging(value);
                ReportPropertyChanging("UserPassword");
                _UserPassword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserPassword");
                OnUserPasswordChanged();
            }
        }
        private global::System.String _UserPassword;
        partial void OnUserPasswordChanging(global::System.String value);
        partial void OnUserPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserRoleID
        {
            get
            {
                return _UserRoleID;
            }
            set
            {
                OnUserRoleIDChanging(value);
                ReportPropertyChanging("UserRoleID");
                _UserRoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserRoleID");
                OnUserRoleIDChanged();
            }
        }
        private global::System.Int32 _UserRoleID;
        partial void OnUserRoleIDChanging(global::System.Int32 value);
        partial void OnUserRoleIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VirtualGarageModel", Name="UserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRole object.
        /// </summary>
        /// <param name="userRoleID">Initial value of the UserRoleID property.</param>
        /// <param name="userRoleName">Initial value of the UserRoleName property.</param>
        public static UserRole CreateUserRole(global::System.Int32 userRoleID, global::System.String userRoleName)
        {
            UserRole userRole = new UserRole();
            userRole.UserRoleID = userRoleID;
            userRole.UserRoleName = userRoleName;
            return userRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserRoleID
        {
            get
            {
                return _UserRoleID;
            }
            set
            {
                if (_UserRoleID != value)
                {
                    OnUserRoleIDChanging(value);
                    ReportPropertyChanging("UserRoleID");
                    _UserRoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserRoleID");
                    OnUserRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _UserRoleID;
        partial void OnUserRoleIDChanging(global::System.Int32 value);
        partial void OnUserRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserRoleName
        {
            get
            {
                return _UserRoleName;
            }
            set
            {
                OnUserRoleNameChanging(value);
                ReportPropertyChanging("UserRoleName");
                _UserRoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserRoleName");
                OnUserRoleNameChanged();
            }
        }
        private global::System.String _UserRoleName;
        partial void OnUserRoleNameChanging(global::System.String value);
        partial void OnUserRoleNameChanged();

        #endregion
    
    }

    #endregion
    
}
