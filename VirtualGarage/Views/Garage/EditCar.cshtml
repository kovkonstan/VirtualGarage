@model VirtualGarage.Models.EditCarModel

@{
    ViewBag.Title = "Редактировать автомобиль";
    Layout = "~/Views/Shared/Layouts/_Layout.cshtml";
}

<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/calendar/jquery-ui-1.8.16.custom.css")" />
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-ui-1.8.16.custom.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.ui.datepicker-ru.js")"></script>
<script type="text/javascript">
    $(document).ready(function () {

        $("#ddlMarks").change(function () {
            $("#ddlModels").attr("disabled", false);
            if ($(this).val() != "") {
                var idMark = $(this).val();

                $.getJSON("/Garage/GetModelsByMark", { markId: idMark },
                function (markData) {
                    var select = $("#ddlModels");
                    select.empty();
                    select.append($('<option/>', {
                        value: 0,
                        text: " - Выберите модель - "
                    }));
                    $.each(markData, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.Value,
                            text: itemData.Text
                        }));
                    });
                });
            }
            else {
                $("#ddlModels :first").attr("selected", "selected");
                $("#ddlModels").attr("disabled", true);
            }
        });



        $.datepicker.setDefaults(
            $.extend($.datepicker.regional["ru"])
			  );

        $(".datepicker").datepicker({
            changeMonth: "true",
            changeYear: "true",
            maxDate: new Date(),
            showOn: "button",
            buttonImage: "/Scripts/datepicker/calendar.gif",
            buttonImageOnly: true
        });

        $(".datepicker").attr("value", $(".datepicker").val().substring(0, 10));

        if ($("#ddlMarks").val() != "") {
            $("#ddlModels").attr("disabled", false);
        }
    });

</script>

<h2>Редактировать автомобиль</h2>

@using (Html.BeginForm("EditCar", "Garage", FormMethod.Post, new { enctype="multipart/form-data" } ))
{
    @Html.ValidationSummary(true)
    
    @Html.HiddenFor(model => model.CarModel.CarID)
    
        <div class="editor-label">
            @Html.LabelFor(model => model.CarModel.MarkID)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CarModel.MarkID, 
                new List<SelectListItem>() 
                { 
                    new SelectListItem()
                    { 
                        Selected = true, 
                        Text = " - Выберите марку - ",
                        Value = ""
                    }    
                }.Concat(Model.AllMarks), 
                new Dictionary<String, Object>() 
                {
                    {"id", "ddlMarks"}
                })
            @Html.ValidationMessageFor(model => model.CarModel.MarkID)
        </div>                
    
        <div class="editor-label">
            @Html.LabelFor(model => model.CarModel.ModelID)
        </div>
        <div class="editor-field">            
            @Html.DropDownListFor(model => model.CarModel.ModelID,
                new List<SelectListItem>() 
                { 
                    new SelectListItem()
                    { 
                        Selected = true, 
                        Text = " - Выберите модель - ",
                        Value = ""
                    }    
                }.Concat(Model.AllModels), 
            
                new Dictionary<String, Object>() 
                {
                    {"id", "ddlModels"},
                })
            @Html.ValidationMessageFor(model => model.CarModel.ModelID)
        </div>
    
        <div class="editor-label">
            @Html.LabelFor(model => model.CarModel.Year)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CarModel.Year,
                new List<SelectListItem>() 
                { 
                    new SelectListItem()
                    { 
                        Selected = true, 
                        Text = " - Выберите год выпуска - ",
                        Value = ""
                    }    
                }.Concat(Model.GetAllYears()) )

            @Html.ValidationMessageFor(model => model.CarModel.Year)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CarModel.ColorID)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CarModel.ColorID,
                new List<SelectListItem>() 
                { 
                    new SelectListItem()
                    { 
                        Selected = true, 
                        Text = " - Выберите цвет - ",
                        Value = ""
                    }    
                }.Concat(Model.AllColors) )
            @Html.ValidationMessageFor(model => model.CarModel.ColorID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CarModel.FuelTypeID)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CarModel.FuelTypeID,
                new List<SelectListItem>() 
                { 
                    new SelectListItem()
                    { 
                        Selected = true, 
                        Text = " - Выберите тип топлива - ",
                        Value = ""
                    }    
                }.Concat(Model.AllFuelTypes))
            @Html.ValidationMessageFor(model => model.CarModel.FuelTypeID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CarModel.CarcaseTypeID)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CarModel.CarcaseTypeID,
                new List<SelectListItem>() 
                { 
                    new SelectListItem()
                    { 
                        Selected = true, 
                        Text = " - Выберите тип кузова - ",
                        Value = ""
                    }    
                }.Concat(Model.AllCarcaseTypes))
            @Html.ValidationMessageFor(model => model.CarModel.CarcaseTypeID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CarModel.BoxTypeID)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CarModel.BoxTypeID,
                new List<SelectListItem>() 
                { 
                    new SelectListItem()
                    { 
                        Selected = true, 
                        Text = " - Выберите тип КП - ",
                        Value = ""
                    }    
                }.Concat(Model.AllGearBoxTypes))
            @Html.ValidationMessageFor(model => model.CarModel.BoxTypeID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CarModel.EngineVolume)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CarModel.EngineVolume)
            <span>куб. см.</span> 
            @Html.ValidationMessageFor(model => model.CarModel.EngineVolume)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CarModel.BuyDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.CarModel.BuyDate,
                new RouteValueDictionary() { { "class", "datepicker" } })
            @Html.ValidationMessageFor(model => model.CarModel.BuyDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CarModel.CurrencyID)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CarModel.CurrencyID,
                new List<SelectListItem>() 
                { 
                    new SelectListItem()
                    { 
                        Selected = true, 
                        Text = " - Выберите валюту - ",
                        Value = ""
                    }    
                }.Concat(Model.AllCurrences))                
            @Html.ValidationMessageFor(model => model.CarModel.CurrencyID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CarModel.Mileage)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CarModel.Mileage)
            @Html.ValidationMessageFor(model => model.CarModel.Mileage)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CarModel.MonthMileage)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CarModel.MonthMileage)
            @Html.ValidationMessageFor(model => model.CarModel.MonthMileage)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CarModel.AdditionalFeatures)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CarModel.AdditionalFeatures)
            @Html.ValidationMessageFor(model => model.CarModel.AdditionalFeatures)
        </div>

        <div class="editor-field">
            @Html.EditorFor(model => model.CarModel.Visible) 
            <span>Виден всем пользователям</span> 
            @Html.ValidationMessageFor(model => model.CarModel.Visible)
        </div>
    
        <div>
        Фотография:<br />
            <div class="info_photo">
            @if (Model.CarModel.ImageType != null)
            {
                <img class="info_img" src="@Url.Action("GetImage", "Car", new { carID = Model.CarModel.CarID })" alt="" />                
            }
            else
            {
                <img class="info_img" src="@Url.Content("/Content/Samples/sample_img.jpg")" alt="" />                
            }
                
            </div>
            Редактировать фотографию: <br />
            <input type="file" name="photo" />          
        </div>

        <p>
            <input type="submit" value="Сохранить изменения" class="button" />
        </p>
}
